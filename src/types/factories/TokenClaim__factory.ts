/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenClaim, TokenClaimInterface } from "../TokenClaim";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountStaked",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expirationBlock",
                    type: "uint256",
                  },
                ],
                internalType: "struct IERC20SOUL.Schedule[]",
                name: "schedules",
                type: "tuple[]",
              },
            ],
            internalType: "struct IERC20SOUL.Lock",
            name: "lock",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "released",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TokenClaim.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    name: "ClaimUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountStaked",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expirationBlock",
                    type: "uint256",
                  },
                ],
                internalType: "struct IERC20SOUL.Schedule[]",
                name: "schedules",
                type: "tuple[]",
              },
            ],
            internalType: "struct IERC20SOUL.Lock",
            name: "lock",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "released",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TokenClaim.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    name: "NewClaimAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountStaked",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expirationBlock",
                    type: "uint256",
                  },
                ],
                internalType: "struct IERC20SOUL.Schedule[]",
                name: "schedules",
                type: "tuple[]",
              },
            ],
            internalType: "struct IERC20SOUL.Lock",
            name: "lock",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "released",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TokenClaim.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unlockedAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expirationBlock",
                type: "uint256",
              },
            ],
            internalType: "struct IERC20SOUL.Schedule[]",
            name: "schedules",
            type: "tuple[]",
          },
        ],
        internalType: "struct IERC20SOUL.Lock",
        name: "_lock",
        type: "tuple",
      },
    ],
    name: "addClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "unlockedAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expirationBlock",
                type: "uint256",
              },
            ],
            internalType: "struct IERC20SOUL.Schedule[]",
            name: "schedules",
            type: "tuple[]",
          },
        ],
        internalType: "struct IERC20SOUL.Lock",
        name: "lock",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "released",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getClaimLockSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20SOUL.Schedule[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getClaimTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612f76806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c57806390be10cc1161006657806390be10cc14610211578063c4d66de81461022f578063c6788bdd1461024b578063f2fde38b1461027d576100ea565b8063715018a6146101cd57806374a8f103146101d75780638da5cb5b146101f3576100ea565b80634e71d92d116100c85780634e71d92d146101475780634f8d507114610151578063571b8132146101815780636d737b8f146101b1576100ea565b806321df0da7146100ef5780632e1a7d4d1461010d5780634838ed1914610129575b600080fd5b6100f7610299565b6040516101049190612154565b60405180910390f35b61012760048036038101906101229190611b5e565b6102c3565b005b610131610499565b60405161013e91906123ec565b60405180910390f35b61014f61049f565b005b61016b60048036038101906101669190611a95565b610884565b60405161017891906121c8565b60405180910390f35b61019b60048036038101906101969190611a95565b61093c565b6040516101a891906123ec565b60405180910390f35b6101cb60048036038101906101c69190611ac2565b610a6b565b005b6101d5610e4f565b005b6101f160048036038101906101ec9190611a95565b610ed7565b005b6101fb6110e0565b6040516102089190612154565b60405180910390f35b61021961110a565b60405161022691906123ec565b60405180910390f35b61024960048036038101906102449190611a95565b6111c9565b005b61026560048036038101906102609190611a95565b611331565b60405161027493929190612407565b60405180910390f35b61029760048036038101906102929190611a95565b6113f9565b005b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026065541415610309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103009061238a565b60405180910390fd5b60026065819055506103196114f1565b73ffffffffffffffffffffffffffffffffffffffff166103376110e0565b73ffffffffffffffffffffffffffffffffffffffff161461038d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103849061232a565b60405180910390fd5b8061039661110a565b10156103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906122aa565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61041d6110e0565b836040518363ffffffff1660e01b815260040161043b92919061219f565b602060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190611b31565b50600160658190555050565b60995481565b600260655414156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc9061238a565b60405180910390fd5b60026065819055503360006104f98261093c565b141561053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105319061220a565b60405180910390fd5b60001515609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff161515146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c79061224a565b60405180910390fd5b6000609860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411156106d557609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600001546040518363ffffffff1660e01b815260040161068192919061219f565b602060405180830381600087803b15801561069b57600080fd5b505af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190611b31565b505b60006106e03361093c565b905060008260010160000154111561078557609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa1e119933846001016040518363ffffffff1660e01b815260040161075292919061216f565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505b609860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160008082016000905560018201600090556002820160006107f291906119d7565b50506004820160006101000a81549060ff0219169055505060018260040160006101000a81548160ff0219169083151502179055508060996000828254610839919061260c565b925050819055507fe2cd961dcb957c97f9f8e1d73f62d5a0a1afaf40f9cc7265f7cf846a9fbf94a48260405161086f91906123ca565b60405180910390a15050506001606581905550565b6060609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600201805480602002602001604051908101604052809291908181526020016000905b82821015610931578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108eb565b505050509050919050565b600080609860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610a22578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906109dc565b505050508152505081526020016004820160009054906101000a900460ff16151515158152505090508060200151600001518160000151610a63919061255c565b915050919050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad3906121ea565b60405180910390fd5b610ae46114f1565b73ffffffffffffffffffffffffffffffffffffffff16610b026110e0565b73ffffffffffffffffffffffffffffffffffffffff1614610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f9061232a565b60405180910390fd5b6000826000013584610b6a919061255c565b905080610b7561110a565b1015610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad9061228a565b60405180910390fd5b60008111610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf09061230a565b60405180910390fd5b600083600001351115610c1057610c0f836114f9565b5b6000609860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610c5e8761093c565b1415610cbd5783816001018181610c759190612e82565b9050508481600001819055507fd9339bf5e45e737d7af10b5ee28fa69680d9b6942736fbf5d9dfb17b25d6724481604051610cb091906123ca565b60405180910390a1610e11565b8360000135816001016000016000828254610cd8919061255c565b9250508190555060005b848060400190610cf29190612445565b9050811015610dbd57816001016002016040518060400160405280878060400190610d1d9190612445565b85818110610d2e57610d2d612918565b5b905060400201600001358152602001878060400190610d4d9190612445565b85818110610d5e57610d5d612918565b5b905060400201602001358152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508080610db590612871565b915050610ce2565b5084816000016000828254610dd2919061255c565b925050819055507f1d21af6610cd8bfca43325b98b54cc11382db8440fb18eb2277bd867488ff28c81604051610e0891906123ca565b60405180910390a15b60008160040160006101000a81548160ff0219169083151502179055508160996000828254610e40919061255c565b92505081905550505050505050565b610e576114f1565b73ffffffffffffffffffffffffffffffffffffffff16610e756110e0565b73ffffffffffffffffffffffffffffffffffffffff1614610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec29061232a565b60405180910390fd5b610ed56000611823565b565b610edf6114f1565b73ffffffffffffffffffffffffffffffffffffffff16610efd6110e0565b73ffffffffffffffffffffffffffffffffffffffff1614610f53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4a9061232a565b60405180910390fd5b806000610f5f8261093c565b1415610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f979061220a565b60405180910390fd5b60001515609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151514611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102d9061224a565b60405180910390fd5b61103f8261093c565b60996000828254611050919061260c565b92505081905550609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160008082016000905560018201600090556002820160006110c491906119d7565b50506004820160006101000a81549060ff021916905550505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609954609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161116a9190612154565b60206040518083038186803b15801561118257600080fd5b505afa158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190611b8b565b6111c4919061260c565b905090565b600060019054906101000a900460ff166111f15760008054906101000a900460ff16156111fa565b6111f96118e9565b5b611239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611230906122ea565b60405180910390fd5b60008060019054906101000a900460ff161590508015611289576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c357600080fd5b6112cb6118fa565b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561132d5760008060016101000a81548160ff0219169083151502179055505b5050565b609860205280600052604060002060009150905080600001549080600101604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156113d957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611393565b5050505081525050908060040160009054906101000a900460ff16905083565b6114016114f1565b73ffffffffffffffffffffffffffffffffffffffff1661141f6110e0565b73ffffffffffffffffffffffffffffffffffffffff1614611475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146c9061232a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc9061222a565b60405180910390fd5b6114ee81611823565b50565b600033905090565b6000816000013511611540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115379061226a565b60405180910390fd5b600080600090505b8280604001906115589190612445565b90508110156117d8578280604001906115719190612445565b8281811061158257611581612918565b5b9050604002016000013582611597919061255c565b9150609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca8f45bd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561160157600080fd5b505afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190611b8b565b42611644919061255c565b8380604001906116549190612445565b8381811061166557611664612918565b5b90506040020160200135116116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a69061234a565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663417450086040518163ffffffff1660e01b815260040160206040518083038186803b15801561171757600080fd5b505afa15801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174f9190611b8b565b4261175a919061255c565b83806040019061176a9190612445565b8381811061177b5761177a612918565b5b90506040020160200135106117c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bc906122ca565b60405180910390fd5b80806117d090612871565b915050611548565b508160000135811461181f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611816906123aa565b60405180910390fd5b5050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006118f430611953565b15905090565b600060019054906101000a900460ff16611949576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119409061236a565b60405180910390fd5b611951611976565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166119c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119bc9061236a565b60405180910390fd5b6119d56119d06114f1565b611823565b565b50805460008255600202906000526020600020908101906119f891906119fb565b50565b5b80821115611a1e576000808201600090556001820160009055506002016119fc565b5090565b600081359050611a3181612ef6565b92915050565b600081519050611a4681612f0d565b92915050565b600060608284031215611a6257611a616129d1565b5b81905092915050565b600081359050611a7a81612f24565b92915050565b600081519050611a8f81612f24565b92915050565b600060208284031215611aab57611aaa6129e5565b5b6000611ab984828501611a22565b91505092915050565b600080600060608486031215611adb57611ada6129e5565b5b6000611ae986828701611a22565b9350506020611afa86828701611a6b565b925050604084013567ffffffffffffffff811115611b1b57611b1a6129e0565b5b611b2786828701611a4c565b9150509250925092565b600060208284031215611b4757611b466129e5565b5b6000611b5584828501611a37565b91505092915050565b600060208284031215611b7457611b736129e5565b5b6000611b8284828501611a6b565b91505092915050565b600060208284031215611ba157611ba06129e5565b5b6000611baf84828501611a80565b91505092915050565b6000611bc483836120c0565b60408301905092915050565b6000611bdc83836120ef565b60408301905092915050565b611bf181612695565b82525050565b6000611c02826124f9565b611c0c8185612529565b9350611c17836124c9565b8060005b83811015611c48578151611c2f8882611bb8565b9750611c3a8361250f565b925050600181019050611c1b565b5085935050505092915050565b6000611c60826124f9565b611c6a818561253a565b9350611c75836124c9565b8060005b83811015611ca6578151611c8d8882611bb8565b9750611c988361250f565b925050600181019050611c79565b5085935050505092915050565b6000611cbe82612504565b611cc88185612529565b9350611cd3836124d9565b8060005b83811015611d035781611cea8882611bd0565b9750611cf58361251c565b925050600181019050611cd7565b5085935050505092915050565b611d19816126a7565b82525050565b611d28816126a7565b82525050565b6000611d3b600f8361254b565b9150611d4682612a47565b602082019050919050565b6000611d5e60208361254b565b9150611d6982612a70565b602082019050919050565b6000611d8160268361254b565b9150611d8c82612a99565b604082019050919050565b6000611da460238361254b565b9150611daf82612ae8565b604082019050919050565b6000611dc760138361254b565b9150611dd282612b37565b602082019050919050565b6000611dea603d8361254b565b9150611df582612b60565b604082019050919050565b6000611e0d60298361254b565b9150611e1882612baf565b604082019050919050565b6000611e3060238361254b565b9150611e3b82612bfe565b604082019050919050565b6000611e53602e8361254b565b9150611e5e82612c4d565b604082019050919050565b6000611e76601e8361254b565b9150611e8182612c9c565b602082019050919050565b6000611e9960208361254b565b9150611ea482612cc5565b602082019050919050565b6000611ebc60238361254b565b9150611ec782612cee565b604082019050919050565b6000611edf602b8361254b565b9150611eea82612d3d565b604082019050919050565b6000611f02601f8361254b565b9150611f0d82612d8c565b602082019050919050565b6000611f25600c8361254b565b9150611f3082612db5565b602082019050919050565b6000606083016000808401549050611f5281612857565b611f5f6000870182612136565b50600184018583036020870152611f768382611ff2565b92505060048401549050611f898161283d565b611f966040870182611d10565b50819250505092915050565b6000606083016000830151611fba6000860182612136565b506020830151611fcd6020860182612136565b5060408301518482036040860152611fe58282611bf7565b9150508091505092915050565b600060608301600080840154905061200981612857565b6120166000870182612136565b506001840154905061202781612857565b6120346020870182612136565b5060028401858303604087015261204b8382611cb3565b925050819250505092915050565b600060608301600080840154905061207081612857565b61207d6000870182612136565b506001840154905061208e81612857565b61209b6020870182612136565b506002840185830360408701526120b28382611cb3565b925050819250505092915050565b6040820160008201516120d66000850182612136565b5060208201516120e96020850182612136565b50505050565b60408201600080830154905061210481612857565b6121116000860182612136565b506001830154905061212281612857565b61212f6020860182612136565b5050505050565b61213f816126d3565b82525050565b61214e816126d3565b82525050565b60006020820190506121696000830184611be8565b92915050565b60006040820190506121846000830185611be8565b81810360208301526121968184612059565b90509392505050565b60006040820190506121b46000830185611be8565b6121c16020830184612145565b9392505050565b600060208201905081810360008301526121e28184611c55565b905092915050565b6000602082019050818103600083015261220381611d2e565b9050919050565b6000602082019050818103600083015261222381611d51565b9050919050565b6000602082019050818103600083015261224381611d74565b9050919050565b6000602082019050818103600083015261226381611d97565b9050919050565b6000602082019050818103600083015261228381611dba565b9050919050565b600060208201905081810360008301526122a381611ddd565b9050919050565b600060208201905081810360008301526122c381611e00565b9050919050565b600060208201905081810360008301526122e381611e23565b9050919050565b6000602082019050818103600083015261230381611e46565b9050919050565b6000602082019050818103600083015261232381611e69565b9050919050565b6000602082019050818103600083015261234381611e8c565b9050919050565b6000602082019050818103600083015261236381611eaf565b9050919050565b6000602082019050818103600083015261238381611ed2565b9050919050565b600060208201905081810360008301526123a381611ef5565b9050919050565b600060208201905081810360008301526123c381611f18565b9050919050565b600060208201905081810360008301526123e48184611f3b565b905092915050565b60006020820190506124016000830184612145565b92915050565b600060608201905061241c6000830186612145565b818103602083015261242e8185611fa2565b905061243d6040830184611d1f565b949350505050565b60008083356001602003843603038112612462576124616129d6565b5b80840192508235915067ffffffffffffffff821115612484576124836129cc565b5b6020830192506040820236038313156124a05761249f6129db565b5b509250929050565b60008190506124b88260026125b2565b9050919050565b6000819050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600082905092915050565b600081519050919050565b600081549050919050565b6000602082019050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612567826126d3565b9150612572836126d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125a7576125a66128e9565b5b828201905092915050565b60006125bd826126d3565b91506125c8836126d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612601576126006128e9565b5b828202905092915050565b6000612617826126d3565b9150612622836126d3565b925082821015612635576126346128e9565b5b828203905092915050565b600060ff82169050919050565b6000819050919050565b8183101561269057612668826124a8565b612671846124a8565b61267a836124d9565b81810183820161268a81836126dd565b50505050505b505050565b60006126a0826126b3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b5b818110156126fc576126f1600082612a11565b6002810190506126de565b5050565b61270d6000808301612a2f565b61271b600060018301612a2f565b50565b6000612729826126d3565b9050919050565b61273a83836124ee565b6127448183612996565b61274d836124bf565b612756836124d9565b6000805b84811015612786578361276e818486612eb3565b6040850194506002840193505060018101905061275a565b5050505050505050565b6000810160008301806127a281612980565b90506127ae8184612e90565b5050506001810160208301806127c381612980565b90506127cf8184612e90565b50505060028101604083016127e48185612445565b6127ef818386612e72565b505050505050565b60008101600083018061280981612980565b90506128158184612e90565b50505060018101602083018061282a81612980565b90506128368184612e90565b5050505050565b600061285061284b83612a04565b612640565b9050919050565b600061286a61286583612a04565b61264d565b9050919050565b600061287c826126d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128af576128ae6128e9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b6000813561298d81612f24565b80915050919050565b680100000000000000008211156129b0576129af612947565b5b6129b981612504565b8282556129c7838284612657565b505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160001b9050919050565b600082821b905092915050565b60008160001c9050919050565b60008214612a2257612a216128ba565b5b612a2b81612700565b5050565b612a37612f3b565b612a42818484612ed1565b505050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b7f546f6b656e436c61696d3a20436c61696d20646f6573206e6f74206578697374600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e436c61696d3a20436c61696d20686173206265656e2072656c656160008201527f7365640000000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964204c6f636b20616d6f756e7400000000000000000000000000600082015250565b7f546f6b656e436c61696d3a2063616e6e6f742063726561746520636c61696d2060008201527f62656361757365206e6f742073756666696369656e7420746f6b656e73000000602082015250565b7f546f6b656e436c61696d3a206e6f7420656e6f7567682077697468647261776160008201527f626c652066756e64730000000000000000000000000000000000000000000000602082015250565b7f4c6f636b207363686564756c6520646f6573206e6f74206d656574206d61786960008201527f6d756d0000000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f546f6b656e436c61696d3a20616d6f756e74206d757374206265203e20300000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4c6f636b207363686564756c6520646f6573206e6f74206d656574206d696e6960008201527f6d756d0000000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f496e76616c6964204c6f636b0000000000000000000000000000000000000000600082015250565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e0a846129ea565b9350801983169250808416831791505092915050565b600060088302612e507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826129f7565b612e5a86836129f7565b95508019841693508086168417925050509392505050565b612e7d838383612730565b505050565b612e8c8282612790565b5050565b612e998261271e565b612eac612ea582612976565b8354612dde565b8255505050565b8115612ec257612ec16128ba565b5b612ecc83826127f7565b505050565b612eda8361271e565b612eee612ee682612976565b848454612e20565b825550505050565b612eff81612695565b8114612f0a57600080fd5b50565b612f16816126a7565b8114612f2157600080fd5b50565b612f2d816126d3565b8114612f3857600080fd5b50565b60009056fea26469706673582212208e0eaef30517dc9ce18e572d480c8b844b6653b765c7f59098bc017daf1f5f7d64736f6c63430008070033";

export class TokenClaim__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenClaim> {
    return super.deploy(overrides || {}) as Promise<TokenClaim>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenClaim {
    return super.attach(address) as TokenClaim;
  }
  connect(signer: Signer): TokenClaim__factory {
    return super.connect(signer) as TokenClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenClaimInterface {
    return new utils.Interface(_abi) as TokenClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenClaim {
    return new Contract(address, _abi, signerOrProvider) as TokenClaim;
  }
}
